CREATE TABLESPACE project
   DATAFILE 'C:\oraclexe\app\oracle\oradata\XE\project.dat'
   SIZE 60M AUTOEXTEND ON;

CREATE USER pro
    IDENTIFIED BY admin
    DEFAULT TABLESPACE project
    QUOTA 30M ON project;

GRANT CREATE SESSION TO pro;

GRANT CREATE TABLE TO pro;

GRANT CREATE SEQUENCE TO pro;

GRANT CREATE CLUSTER TO pro;


CREATE TABLE DISPLAY
	( 	DISPLAY_ID NUMBER PRIMARY KEY
	,	DISPLAY_TYPE VARCHAR2(50)
	,	TOUCHSCREEN NUMBER
	,	DIAGONAL NUMBER
	);

CREATE TABLE CAMERA
	( 	CAMERA_ID NUMBER PRIMARY KEY
	,	MEGAPIXEL NUMBER(3)
	,	MAX_PHOTO_SIZE NUMBER
	,	MAX_VIDEO_SIZE NUMBER
	,	VIDEO_FPS NUMBER
	);

CREATE TABLE PHONE
	( 	PHONE_ID NUMBER PRIMARY KEY
	,	MANUFACTURER VARCHAR2(20)
	,	MODEL VARCHAR2(15)
	,	YEAR NUMBER(4)
	,	HEIGHT NUMBER
	,	WIDTH NUMBER
	,	DEPTH NUMBER
	,	WEIGHT NUMBER
	, 	BLUTTOOTH NUMBER(1)
	,	USB NUMBER(1)
	,	NUMBERERNAL_MEMORY_SIZE NUMBER
	,	MAX_CARD_SIZE NUMBER(1)
	,	BATERY_TYPE VARCHAR2(10)
	,	BATERY_SIZE NUMBER
	,	STANDBY NUMBER
	,	DISPLAY_ID NUMBER
	,	CAMERA_ID NUMBER
	,	FOREIGN KEY (DISPLAY_ID)
    	REFERENCES DISPLAY(DISPLAY_ID)
    ,	FOREIGN KEY (CAMERA_ID)
    	REFERENCES CAMERA(CAMERA_ID)
	);

CREATE TABLE CHIPSET
	( 	CHIPSET_ID NUMBER PRIMARY KEY
	,	MANUFACTURER VARCHAR2(15)
	,	MODEL VARCHAR2(20)
	,	CPU_CORES NUMBER
	,	CPU_SPEED NUMBER
	,	GPU VARCHAR2(15)
	);

CREATE TABLE SMARTPHONE
	( 	PHONE_ID NUMBER PRIMARY KEY
	,	ACCELEROMETER NUMBER(1)
	,	GYRO NUMBER(1)
	,	RAM NUMBER
	,	OS_TYPE VARCHAR2(20)
	,	OS_VERSION VARCHAR2(20)
	,	CHIPSET_ID NUMBER
	,	FOREIGN KEY (CHIPSET_ID)
      	REFERENCES CHIPSET(CHIPSET_ID)
	);

CREATE TABLE SELLER
	( 	SELLER_ID NUMBER PRIMARY KEY
	,	ADRESS VARCHAR2(50)
	,	NAME VARCHAR2(40)
	);

CREATE TABLE PHONES
	( 	ID NUMBER PRIMARY KEY
	,	PHONE_ID NUMBER
	,	SELLER_ID NUMBER
	,	FOREIGN KEY (PHONE_ID)
      	REFERENCES PHONE(PHONE_ID)
    ,	FOREIGN KEY (SELLER_ID)
      	REFERENCES SELLER(SELLER_ID)
	);

CREATE TABLE CUSTOMER
	( 	CUSTOMER_ID NUMBER PRIMARY KEY
	,	PHONE_NUMBER VARCHAR2(10)
	,	CUSTOMER_NAME VARCHAR2(20)
	);

CREATE TABLE ORDERS
	( 	ORDER_ID NUMBER PRIMARY KEY
	,	DATE1 DATE
	,	CUSTOMER_ID NUMBER
	,	PHONE_ID NUMBER
	,	FOREIGN KEY (CUSTOMER_ID)
    	REFERENCES CUSTOMER(CUSTOMER_ID)
    ,	FOREIGN KEY (PHONE_ID)
    	REFERENCES PHONES(ID)
	);